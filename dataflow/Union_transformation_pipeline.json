{
	"name": "Union_transformation_pipeline",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employee1DataSet",
						"type": "DatasetReference"
					},
					"name": "employee1"
				},
				{
					"dataset": {
						"referenceName": "Employee2Dataset",
						"type": "DatasetReference"
					},
					"name": "employee2"
				},
				{
					"dataset": {
						"referenceName": "Employee3Dataset",
						"type": "DatasetReference"
					},
					"name": "employee3"
				},
				{
					"dataset": {
						"referenceName": "Employee4Dataset",
						"type": "DatasetReference"
					},
					"name": "employee4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputDataDatset",
						"type": "DatasetReference"
					},
					"name": "AllEmployeeSink"
				}
			],
			"transformations": [
				{
					"name": "unionAllEmployees"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee1",
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          job_title as string,",
				"          salary as string,",
				"          reports_to as string,",
				"          office_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee2",
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          job_title as string,",
				"          salary as string,",
				"          reports_to as string,",
				"          office_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee3",
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          job_title as string,",
				"          salary as string,",
				"          reports_to as string,",
				"          office_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee4",
				"employee1, employee2, employee3, employee4 union(byName: true)~> unionAllEmployees",
				"unionAllEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['AllUnionEmployeesData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> AllEmployeeSink"
			]
		}
	}
}