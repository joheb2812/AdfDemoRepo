{
	"name": "Join Transformation data flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmployeeDataset",
						"type": "DatasetReference"
					},
					"name": "Employee"
				},
				{
					"dataset": {
						"referenceName": "OfficeDataset",
						"type": "DatasetReference"
					},
					"name": "Office"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputDataDatset",
						"type": "DatasetReference"
					},
					"name": "FinalDataOfEmployee"
				}
			],
			"transformations": [
				{
					"name": "aggregateOnOfficeId"
				},
				{
					"name": "JoinOfficeAndEmployee"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RemoveColumns2",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          job_title as string,",
				"          salary as string,",
				"          reports_to as string,",
				"          office_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"source(output(",
				"          office_id as string,",
				"          address as string,",
				"          city as string,",
				"          state as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Office",
				"Employee aggregate(groupBy(office_id),",
				"     No_of_employee = count(employee_id)) ~> aggregateOnOfficeId",
				"aggregateOnOfficeId, Office join(aggregateOnOfficeId@office_id == Office@office_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinOfficeAndEmployee",
				"RemoveColumns2 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
				"JoinOfficeAndEmployee select(mapColumn(",
				"          office_id,",
				"          No_of_employee,",
				"          office_id,",
				"          address,",
				"          state",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns2",
				"RemoveColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['OfficeEmployeeTotal.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FinalDataOfEmployee"
			]
		}
	}
}