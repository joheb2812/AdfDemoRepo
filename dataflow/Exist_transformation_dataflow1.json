{
	"name": "Exist_transformation_dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OfficeDataset",
						"type": "DatasetReference"
					},
					"name": "office"
				},
				{
					"dataset": {
						"referenceName": "EmployeeDataset",
						"type": "DatasetReference"
					},
					"name": "Employees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputDataDatset",
						"type": "DatasetReference"
					},
					"name": "ExistsOfficeIdSink"
				}
			],
			"transformations": [
				{
					"name": "officeIdExists"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          office_id as string,",
				"          address as string,",
				"          city as string,",
				"          state as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> office",
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          job_title as string,",
				"          salary as string,",
				"          reports_to as string,",
				"          office_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employees",
				"office, Employees exists(office@office_id == Employees@office_id,",
				"     negate:false,",
				"     broadcast: 'auto')~> officeIdExists",
				"officeIdExists derive(office_id = upper(city)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['office_id_exists.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ExistsOfficeIdSink"
			]
		}
	}
}